{"version":3,"sources":["imgs/lixeira.png","imgs/starwars-fight.gif","imgs/starwars-run-robo.gif","imgs/starwars-logo.gif","imgs/wave-haikei(4).svg","context/MyContext.js","helpers/formatName.js","components/ComparisonFilter.js","components/Header.js","components/OrderFilter.js","components/NameFilter.js","components/Table.js","components/Starwars.js","context/Provider.js","App.js","index.js"],"names":["module","exports","MyContext","createContext","formatName","name","splitName","split","forEach","e","index","toUpperCase","slice","join","COLUMNS","COMPARATORS","ComparisonFilter","useContext","filterByNumericValues","setFilterByNumericValues","useState","columns","setColumns","selectedColumn","setSelectedColumn","selectedComparator","setSelectedComparator","selectedValue","setSelectedValue","handleChange","setFunction","value","target","parseInt","newValue","renderSelect","labelName","array","testid","id","toLowerCase","htmlFor","className","data-testid","onChange","event","map","key","length","type","placeholder","onClick","console","log","prev","column","comparison","newColumns","filter","disabled","src","lixeira","alt","newFilterByNumericValues","newColumn","includes","removeFilter","aria-hidden","Header","fight","robo","OrderFilter","setOrder","selectColumn","setSelectColumn","radioBtn","setRadioBtn","setFunc","sort","NameFilter","filterByName","setFilterByName","Table","data","filteredData","columnsName","Object","keys","border","renderTHead","line","lineIndex","colIndex","columnData","Array","isArray","i","renderColumns","renderTBody","Starwars","isFetching","error","style","color","starwarsLogo","Provider","children","setData","setIsFetching","setError","setFilteredData","undefined","order","checkSort","next","checkNumberOrUnknown","ascendente","newNext","newPrev","filterByColumn","newData","filterNewDataByColumn","makeComparison","useEffect","a","fetch","then","response","json","catch","results","residents","getPlanets","filterData","sortData","contextValue","App","back","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d8860561.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/lixeira.111452ff.png\";","module.exports = __webpack_public_path__ + \"static/media/starwars-fight.7e737fa8.gif\";","module.exports = __webpack_public_path__ + \"static/media/starwars-run-robo.fe9fa9f1.gif\";","module.exports = __webpack_public_path__ + \"static/media/starwars-logo.a89ec600.gif\";","module.exports = __webpack_public_path__ + \"static/media/wave-haikei(4).6ba45665.svg\";","import { createContext } from 'react';\n\nconst MyContext = createContext();\n\nexport default MyContext;\n","const formatName = (name) => {\n  const splitName = name.split('_');\n  splitName.forEach((e, index) => {\n    splitName[index] = `${e[0].toUpperCase()}${e.slice(1)}`;\n  });\n  return splitName.join(' ');\n};\n\nexport default formatName;\n","import React, { useContext, useState } from 'react';\nimport MyContext from '../context/MyContext';\nimport formatName from '../helpers/formatName';\nimport './comparisonFilter.css';\nimport lixeira from '../imgs/lixeira.png';\n\nconst COLUMNS = ['population', 'orbital_period', 'diameter', 'rotation_period',\n  'surface_water'];\nconst COMPARATORS = ['maior que', 'menor que', 'igual a'];\nconst negNumber1 = -1;\n\nfunction ComparisonFilter() {\n  const { filterByNumericValues, setFilterByNumericValues } = useContext(MyContext);\n  const [columns, setColumns] = useState(COLUMNS);\n  const [selectedColumn, setSelectedColumn] = useState('population');\n  const [selectedComparator, setSelectedComparator] = useState('maior que');\n  const [selectedValue, setSelectedValue] = useState('');\n\n  const handleChange = ({ target: { value } }, setFunction) => {\n    if (parseInt(value, 10)) {\n      const newValue = parseInt(value, 10);\n      setFunction((newValue > 0) ? newValue : newValue * (negNumber1));\n    } else { setFunction(value); }\n  };\n\n  const renderSelect = ([labelName, array, testid, value, setFunction]) => {\n    const id = labelName.split(':')[0].toLowerCase();\n    return (\n      <label htmlFor={ `${id}-comparison` } className={ `${id}-comparison` }>\n        <span>{labelName}</span>\n        <select\n          data-testid={ testid }\n          id={ `${id}-comparison` }\n          value={ value }\n          onChange={ (event) => handleChange(event, setFunction) }\n        >\n          {array.map((e) => (\n            <option key={ e } value={ e }>{formatName(e)}</option>\n          ))}\n        </select>\n      </label>\n    );\n  };\n\n  const handleClick = () => {\n    const newValue = parseInt(selectedValue, 10);\n    console.log(newValue);\n    setFilterByNumericValues((prev) => [\n      ...prev,\n      { column: selectedColumn, comparison: selectedComparator, value: newValue },\n    ]);\n    const newColumns = columns.filter((e) => e !== selectedColumn);\n    setColumns(newColumns);\n    setSelectedColumn(newColumns[0]);\n    setSelectedComparator('maior que');\n    setSelectedValue('');\n  };\n\n  const removeFilter = (column) => {\n    const newFilterByNumericValues = filterByNumericValues.filter((e) => (\n      e.column !== column\n    ));\n    setFilterByNumericValues(newFilterByNumericValues);\n    const newColumn = COLUMNS.filter((e) => [...columns, column].includes(e));\n    setColumns(newColumn);\n    setSelectedColumn(newColumn[0]);\n  };\n\n  const renderFilters = () => (\n    filterByNumericValues.map(({ column, comparison, value }) => (\n      <div key={ column } data-testid=\"filter\" className=\"comparison-filter\">\n        <p>{formatName(`${column} ${comparison} ${value}`)}</p>\n        <img\n          src={ lixeira }\n          alt=\"lixeira\"\n          onClick={ () => removeFilter(column) }\n          aria-hidden=\"true\"\n        />\n      </div>\n    ))\n  );\n\n  const removeAllFilters = () => {\n    setFilterByNumericValues([]);\n    setColumns(COLUMNS);\n    setSelectedColumn(COLUMNS[0]);\n    setSelectedValue('');\n  };\n\n  return (\n    <section className=\"comparison-filter-section\">\n      <div className=\"comparison-filter-fields\">\n        {(columns.length > 0) && (\n          <>\n            <div>\n              {renderSelect([\n                'Coluna: ', columns, 'column-filter', selectedColumn, setSelectedColumn,\n              ])}\n            </div>\n            <div>\n              {renderSelect([\n                'Operador: ', COMPARATORS, 'comparison-filter', selectedComparator,\n                setSelectedComparator,\n              ])}\n            </div>\n            <div>\n              <input\n                data-testid=\"value-filter\"\n                type=\"number\"\n                className=\"value-input\"\n                value={ selectedValue }\n                placeholder=\"Valor\"\n                onChange={ (event) => handleChange(event, setSelectedValue) }\n              />\n            </div>\n            <div>\n              <button\n                type=\"button\"\n                data-testid=\"button-filter\"\n                className=\"filter-btn\"\n                onClick={ handleClick }\n                disabled={ columns.length === 0 || !selectedValue }\n              >\n                Filtrar\n              </button>\n            </div>\n          </>\n        )}\n        <div>\n          <button\n            type=\"button\"\n            data-testid=\"button-remove-filters\"\n            className=\"remove-all-filters-btn\"\n            onClick={ removeAllFilters }\n            disabled={ (filterByNumericValues.length === 0) }\n          >\n            Remover todas filtragens\n          </button>\n        </div>\n      </div>\n      <div className=\"comparison-filters-div\">\n        {renderFilters()}\n      </div>\n    </section>\n  );\n}\n\nexport default ComparisonFilter;\n","import React from 'react';\nimport './header.css';\nimport fight from '../imgs/starwars-fight.gif';\nimport robo from '../imgs/starwars-run-robo.gif';\n\nfunction Header() {\n  return (\n    <header>\n      <img className=\"starwars-fight\" src={ fight } alt=\"luta starwars\" />\n      <div>\n        <h1 className=\"star-wars\">Star Wars</h1>\n        <h1 className=\"planets-search\">Planets Search</h1>\n      </div>\n      <img className=\"starwars-run-robo\" src={ robo } alt=\"robo starwars\" />\n    </header>\n  );\n}\n\nexport default Header;\n","import React, { useContext, useState } from 'react';\nimport MyContext from '../context/MyContext';\nimport formatName from '../helpers/formatName';\nimport './orderFilter.css';\n\nconst COLUMNS = ['population', 'orbital_period', 'diameter', 'rotation_period',\n  'surface_water'];\n\nfunction OrderFilter() {\n  const { setOrder } = useContext(MyContext);\n\n  const [selectColumn, setSelectColumn] = useState(COLUMNS[0]);\n  const [radioBtn, setRadioBtn] = useState('');\n\n  const handleChange = ({ target: { value } }, setFunc) => {\n    setFunc(value);\n  };\n\n  const hancleClick = () => {\n    setOrder({ column: selectColumn, sort: radioBtn });\n  };\n\n  return (\n    <section className=\"order-filter-section\">\n      <label htmlFor=\"orderBy\" className=\"order-by-label\">\n        <span>Ordenar por:</span>\n        <select\n          data-testid=\"column-sort\"\n          id=\"orderBy\"\n          value={ selectColumn }\n          onChange={ (event) => handleChange(event, setSelectColumn) }\n        >\n          {COLUMNS.map((e) => <option key={ e } value={ e }>{formatName(e)}</option>)}\n        </select>\n      </label>\n      <div className=\"asc-desc-div\">\n        <label htmlFor=\"ASC\">\n          <input\n            data-testid=\"column-sort-input-asc\"\n            type=\"radio\"\n            name=\"order\"\n            id=\"ASC\"\n            value=\"ASC\"\n            onChange={ (event) => handleChange(event, setRadioBtn) }\n          />\n          <span>Ascendente</span>\n        </label>\n        <label htmlFor=\"DESC\">\n          <input\n            data-testid=\"column-sort-input-desc\"\n            type=\"radio\"\n            name=\"order\"\n            id=\"DESC\"\n            value=\"DESC\"\n            onChange={ (event) => handleChange(event, setRadioBtn) }\n          />\n          <span>Descendente</span>\n        </label>\n      </div>\n      <button\n        data-testid=\"column-sort-button\"\n        type=\"button\"\n        onClick={ hancleClick }\n        disabled={ (!radioBtn) }\n      >\n        Ordenar\n      </button>\n    </section>\n  );\n}\n\nexport default OrderFilter;\n","import React, { useContext } from 'react';\nimport MyContext from '../context/MyContext';\nimport './nameFilter.css';\n\nfunction NameFilter() {\n  const { filterByName, setFilterByName } = useContext(MyContext);\n\n  const handleChange = ({ target: { value } }) => {\n    setFilterByName(value);\n  };\n\n  return (\n    <section className=\"name-filter-section\">\n      <input\n        data-testid=\"name-filter\"\n        type=\"text\"\n        value={ filterByName }\n        placeholder=\"Search for a planet!\"\n        onChange={ handleChange }\n      />\n    </section>\n  );\n}\n\nexport default NameFilter;\n","import React, { useContext } from 'react';\nimport MyContext from '../context/MyContext';\nimport NameFilter from './NameFilter';\nimport formatName from '../helpers/formatName';\nimport './table.css';\n\nfunction Table() {\n  const { data, filteredData } = useContext(MyContext);\n\n  const renderTHead = (columnsName) => (\n    <thead>\n      <tr>\n        {columnsName.map((e) => <th key={ e }>{formatName(e)}</th>)}\n      </tr>\n    </thead>\n  );\n\n  const renderColumns = (line, column, lineIndex, colIndex) => {\n    const columnData = line[column];\n    if (Array.isArray(columnData)) {\n      return (\n        <td key={ `${column}-${lineIndex}` }>\n          {columnData.map((e, i) => <p key={ `${column}-${lineIndex}-${i}` }>{e}</p>)}\n        </td>\n      );\n    }\n    return (\n      <td\n        key={ `${column}-${lineIndex}` }\n        data-testid={ (colIndex === 0) && 'planet-name' }\n      >\n        {columnData}\n      </td>\n    );\n  };\n\n  const renderTBody = (columnsName) => (\n    <tbody>\n      {filteredData.map((line, lineIndex) => (\n        <tr key={ line.name }>\n          {columnsName.map((column, colIndex) => (\n            renderColumns(line, column, lineIndex, colIndex)))}\n        </tr>\n      ))}\n    </tbody>\n  );\n\n  const columnsName = Object.keys(data[0]);\n  return (\n    <section className=\"table-section\">\n      <h2>Planets Information</h2>\n      <NameFilter />\n      {(filteredData.length > 0) ? (\n        <div className=\"table-div\">\n          <table border=\"1\" className=\"table\">\n            {renderTHead(columnsName)}\n            {renderTBody(columnsName)}\n          </table>\n        </div>) : <h3>Information not found</h3>}\n    </section>\n  );\n}\n\nexport default Table;\n","import React, { useContext } from 'react';\nimport MyContext from '../context/MyContext';\nimport ComparisonFilter from './ComparisonFilter';\nimport Header from './Header';\nimport OrderFilter from './OrderFilter';\nimport Table from './Table';\nimport './starwars.css';\nimport starwarsLogo from '../imgs/starwars-logo.gif';\n\nfunction Starwars() {\n  const { isFetching, error } = useContext(MyContext);\n\n  const renderContent = () => (\n    (!isFetching) ? (\n      <>\n        <Header />\n        <main>\n          <section className=\"all-filters-section\">\n            <h2>Filters</h2>\n            <OrderFilter />\n            <ComparisonFilter />\n          </section>\n          <Table />\n        </main>\n      </>) : (<img className=\"logo\" src={ starwarsLogo } alt=\"logo starwars\" />)\n  );\n\n  return (\n    (!error) ? (renderContent()) : (\n      <h1 className=\"error-message\" style={ { color: 'white' } }>\n        Ops, algo deu errado. Recarregue sua página!\n      </h1>)\n  );\n}\n\nexport default Starwars;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport MyContext from './MyContext';\n\nconst PLANETS_URL = 'https://swapi-trybe.herokuapp.com/api/planets/';\n\nconst Provider = ({ children }) => {\n  const [data, setData] = useState([]);\n  const [isFetching, setIsFetching] = useState(true);\n  const [error, setError] = useState(false);\n  const [filterByName, setFilterByName] = useState('');\n  const [filteredData, setFilteredData] = useState([]);\n  const [filterByNumericValues, setFilterByNumericValues] = useState([]);\n  const [order, setOrder] = useState({ column: undefined, sort: undefined });\n\n  const checkSort = (next, prev, checkNumberOrUnknown, ascendente) => {\n    let newNext = next; let newPrev = prev;\n    const negNumber1 = -1;\n    if (checkNumberOrUnknown) {\n      if (next === 'unknown') { return (ascendente) ? 1 : negNumber1; }\n      if (prev === 'unknown') { return (ascendente) ? negNumber1 : 1; }\n      newNext = parseInt(next, 10);\n      newPrev = parseInt(prev, 10);\n    }\n    if (newNext > newPrev) { return 1; }\n    if (newNext < newPrev) { return negNumber1; }\n    return 0;\n  };\n\n  const makeComparison = (e, index) => {\n    const { column, comparison, value } = filterByNumericValues[index];\n    if (comparison === 'maior que') {\n      return (parseInt(e[column], 10) > parseInt(value, 10));\n    }\n    if (comparison === 'menor que') {\n      return (parseInt(e[column], 10) < parseInt(value, 10));\n    }\n    return (parseInt(e[column], 10) === parseInt(value, 10));\n  };\n\n  const filterByColumn = (newData) => {\n    let filterNewDataByColumn = newData.map((e) => e);\n    for (let index = 0; index < filterByNumericValues.length; index += 1) {\n      filterNewDataByColumn = filterNewDataByColumn.filter((e) => (\n        makeComparison(e, index)));\n    }\n    return filterNewDataByColumn;\n  };\n\n  useEffect(() => {\n    const getPlanets = async () => {\n      setIsFetching(true);\n      const json = await fetch(PLANETS_URL)\n        .then((response) => response.json())\n        .catch(() => 'error');\n      if (json !== 'error') {\n        const { results } = json;\n        const newData = results.map((e) => {\n          delete e.residents;\n          return e;\n        });\n        newData.sort((next, prev) => checkSort(next.name, prev.name));\n        setData(newData);\n      } else { setError(true); }\n      setIsFetching(false);\n    };\n    getPlanets();\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    const filterData = () => {\n      let newData = data.filter((e) => (\n        e.name.toLowerCase().includes(filterByName.toLowerCase())));\n      newData = filterByColumn(newData);\n      return newData;\n    };\n    setFilteredData(filterData());\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [data, filterByName, filterByNumericValues]);\n\n  useEffect(() => {\n    const sortData = () => {\n      const newData = data.map((e) => e); // apenas um clone do filteredData\n      const { column, sort } = order;\n      if (sort === 'ASC') {\n        newData.sort((next, prev) => (\n          checkSort(next[column], prev[column], true, true)));\n      } else {\n        newData.sort((next, prev) => checkSort(prev[column], next[column], true));\n      }\n      setData(newData);\n    };\n    if (order.column) {\n      sortData();\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [order]);\n\n  const contextValue = {\n    data,\n    isFetching,\n    error,\n    filteredData,\n    filterByName,\n    filterByNumericValues,\n    order,\n    setFilterByName,\n    setFilterByNumericValues,\n    setOrder,\n  };\n\n  return (\n    <MyContext.Provider value={ contextValue }>\n      {children}\n    </MyContext.Provider>\n  );\n};\n\nexport default Provider;\n\nProvider.propTypes = {\n  children: PropTypes.object,\n}.isRequired;\n","import React from 'react';\nimport './App.css';\nimport Starwars from './components/Starwars';\nimport Provider from './context/Provider';\nimport back from './imgs/wave-haikei(4).svg';\n\nfunction App() {\n  return (\n    <Provider>\n      <div className=\"background\">\n        <img src={ back } alt=\"scatter-haikei\" />\n      </div>\n      <div className=\"content\">\n        <Starwars />\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}